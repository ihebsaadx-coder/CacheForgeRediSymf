<?php

namespace ContainerX4wdrmx;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSncRedis_DefaultService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'snc_redis.default' shared service.
     *
     * @return \Redis
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/snc/redis-bundle/src/Factory/PhpredisClientFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/snc/redis-bundle/src/Logger/RedisCallInterceptor.php';
        include_once \dirname(__DIR__, 4).'/vendor/friendsofphp/proxy-manager-lts/src/ProxyManager/Configuration.php';
        include_once \dirname(__DIR__, 4).'/vendor/friendsofphp/proxy-manager-lts/src/ProxyManager/GeneratorStrategy/GeneratorStrategyInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/friendsofphp/proxy-manager-lts/src/ProxyManager/GeneratorStrategy/FileWriterGeneratorStrategy.php';
        include_once \dirname(__DIR__, 4).'/vendor/friendsofphp/proxy-manager-lts/src/ProxyManager/FileLocator/FileLocatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/friendsofphp/proxy-manager-lts/src/ProxyManager/FileLocator/FileLocator.php';

        $a = new \ProxyManager\Configuration();
        $a->setGeneratorStrategy(new \ProxyManager\GeneratorStrategy\FileWriterGeneratorStrategy(new \ProxyManager\FileLocator\FileLocator($container->targetDir.'')));
        $a->setProxiesTargetDir($container->targetDir.'');

        return $container->privates['snc_redis.default'] = (new \Snc\RedisBundle\Factory\PhpredisClientFactory(new \Snc\RedisBundle\Logger\RedisCallInterceptor(($container->privates['snc_redis.logger'] ?? $container->getSncRedis_LoggerService()), ($container->privates['debug.stopwatch'] ?? ($container->privates['debug.stopwatch'] = new \Symfony\Component\Stopwatch\Stopwatch(true)))), $a))->create('Redis', [0 => 'redis://redis:6379'], ['connection_async' => false, 'connection_persistent' => false, 'connection_timeout' => 5, 'read_write_timeout' => NULL, 'iterable_multibulk' => false, 'throw_errors' => true, 'serialization' => 'default', 'cluster' => NULL, 'prefix' => NULL, 'service' => NULL], 'default', true);
    }
}
